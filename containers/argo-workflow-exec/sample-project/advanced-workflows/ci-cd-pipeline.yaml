apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: ci-cd-pipeline-
  annotations:
    description: "Complete CI/CD pipeline workflow example"
spec:
  entrypoint: ci-cd-pipeline
  arguments:
    parameters:
    - name: git-repo
      value: "https://github.com/argoproj/argo-workflows"
    - name: branch
      value: "main"
    - name: image-tag
      value: "latest"
  templates:
  - name: ci-cd-pipeline
    dag:
      tasks:
      - name: checkout
        template: git-checkout
      - name: test
        template: run-tests
        dependencies: [checkout]
      - name: build
        template: build-image
        dependencies: [test]
      - name: deploy
        template: deploy-app
        dependencies: [build]
  - name: git-checkout
    script:
      image: alpine/git:latest
      command: [sh]
      source: |
        echo "Cloning repository: {{workflow.parameters.git-repo}}"
        git clone {{workflow.parameters.git-repo}}
        cd argo-workflows
        git checkout {{workflow.parameters.branch}}
        echo "Checkout completed successfully"
        echo "Current commit: $(git rev-parse HEAD)"
      resources:
        requests:
          memory: "64Mi"
          cpu: "100m"
        limits:
          memory: "128Mi"
          cpu: "200m"
  - name: run-tests
    container:
      image: node:16
      command: [sh, -c]
      args: |
        echo "Running tests..."
        echo "Installing dependencies..."
        sleep 3
        echo "Running unit tests..."
        sleep 2
        echo "Running integration tests..."
        sleep 2
        echo "✅ All tests passed!"
      resources:
        requests:
          memory: "128Mi"
          cpu: "200m"
        limits:
          memory: "256Mi"
          cpu: "500m"
  - name: build-image
    container:
      image: docker:latest
      command: [sh, -c]
      args: |
        echo "Building Docker image..."
        echo "Image tag: {{workflow.parameters.image-tag}}"
        sleep 3
        echo "✅ Image built successfully!"
        echo "Image: myapp:{{workflow.parameters.image-tag}}"
      resources:
        requests:
          memory: "128Mi"
          cpu: "200m"
        limits:
          memory: "256Mi"
          cpu: "500m"
  - name: deploy-app
    container:
      image: bitnami/kubectl:latest
      command: [sh, -c]
      args: |
        echo "Deploying application..."
        echo "Environment: production"
        echo "Image: myapp:{{workflow.parameters.image-tag}}"
        sleep 2
        echo "✅ Deployment successful!"
        echo "Application is now live at: https://myapp.example.com"
      resources:
        requests:
          memory: "64Mi"
          cpu: "100m"
        limits:
          memory: "128Mi"
          cpu: "200m"
