version: '3.8'

services:
  step-ca:
    image: cleanstart/step-cli:latest
    container_name: step-ca-production
    command: ["/step", "ca", "start", "--config", "/app/secrets/config/ca.json"]
    ports:
      - "443:443"
    volumes:
      - ./secrets:/app/secrets
      - ./config:/app/config
    environment:
      - STEP_CA_PASSWORD_FILE=/app/secrets/password.txt
    healthcheck:
      test: ["CMD", "/step", "ca", "health", "--ca-url", "https://localhost:443"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  step-cli:
    image: cleanstart/step-cli:latest
    container_name: step-cli-production
    command: ["/step", "version"]
    volumes:
      - ./secrets:/app/secrets
      - ./config:/app/config
    depends_on:
      - step-ca
    healthcheck:
      test: ["CMD", "/step", "version"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-production
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules:/etc/prometheus/rules
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-production
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager-production
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: nginx-production
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - step-ca
      - grafana
      - prometheus
      - alertmanager
    restart: unless-stopped

networks:
  default:
    name: production-pki-network
