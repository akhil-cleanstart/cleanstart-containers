version: '3.8'

networks:
  pki:
    driver: bridge
  monitoring:
    driver: bridge

volumes:
  step_secrets_primary:
    driver: local
  step_secrets_secondary:
    driver: local
  step_certs:
    driver: local
  prometheus_data:
    driver: local

services:
  # Primary CA server
  step-ca-primary:
    image: cleanstart/step-cli:latest
    container_name: step-ca-primary
    restart: unless-stopped
    ports:
      - "443:443"
    volumes:
      - step_secrets_primary:/app/secrets
      - ./ca-config/primary:/app/ca-config
    environment:
      - STEPPATH=/app/secrets
    networks:
      - pki
      - monitoring
    command: ["step-ca", "/app/secrets/config/ca.json"]
    healthcheck:
      test: ["CMD", "step", "ca", "health", "--ca-url", "https://localhost:443"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Secondary CA server
  step-ca-secondary:
    image: cleanstart/step-cli:latest
    container_name: step-ca-secondary
    restart: unless-stopped
    ports:
      - "8443:443"
    volumes:
      - step_secrets_secondary:/app/secrets
      - ./ca-config/secondary:/app/ca-config
    environment:
      - STEPPATH=/app/secrets
    networks:
      - pki
      - monitoring
    command: ["step-ca", "/app/secrets/config/ca.json"]
    healthcheck:
      test: ["CMD", "step", "ca", "health", "--ca-url", "https://localhost:443"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Step CLI for advanced operations
  step-cli:
    image: cleanstart/step-cli:latest
    container_name: step-cli-advanced
    restart: unless-stopped
    volumes:
      - step_secrets_primary:/app/secrets/primary
      - step_secrets_secondary:/app/secrets/secondary
      - step_certs:/app/certs
      - ./scripts:/app/scripts
      - ./automation:/app/automation
    environment:
      - STEPPATH=/app/secrets/primary
      - STEP_CA_URL_PRIMARY=https://step-ca-primary:443
      - STEP_CA_URL_SECONDARY=https://step-ca-secondary:443
    networks:
      - pki
      - monitoring
    depends_on:
      - step-ca-primary
      - step-ca-secondary
    command: ["tail", "-f", "/dev/null"]
    healthcheck:
      test: ["CMD", "step", "version"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Certificate automation service
  cert-automation:
    image: python:3.9-alpine
    container_name: cert-automation
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - step_certs:/app/certs
      - ./automation:/app
    networks:
      - pki
      - monitoring
    depends_on:
      - step-ca-primary
      - step-ca-secondary
    command: >
      sh -c "pip install flask requests schedule &&
             python3 /app/automation_service.py"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Certificate monitoring service
  cert-monitor:
    image: python:3.9-alpine
    container_name: cert-monitor
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - step_certs:/app/certs
      - ./monitoring:/app
    networks:
      - pki
      - monitoring
    depends_on:
      - step-ca-primary
      - step-ca-secondary
    command: >
      sh -c "pip install flask prometheus-client requests &&
             python3 /app/monitoring_service.py"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-advanced
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - monitoring
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Load balancer for CA servers
  haproxy:
    image: haproxy:2.8-alpine
    container_name: haproxy-ca
    restart: unless-stopped
    ports:
      - "8444:80"
      - "8445:8404"
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    networks:
      - pki
    depends_on:
      - step-ca-primary
      - step-ca-secondary
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8404"]
      interval: 30s
      timeout: 10s
      retries: 3
