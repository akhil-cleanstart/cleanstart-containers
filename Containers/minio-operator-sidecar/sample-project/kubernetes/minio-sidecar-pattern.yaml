apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-with-minio-sidecar
  namespace: minio-operator
  labels:
    app: app-with-minio-sidecar
    component: application
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-with-minio-sidecar
  template:
    metadata:
      labels:
        app: app-with-minio-sidecar
        component: application
    spec:
      containers:
      # Main application container
      - name: app
        image: nginx:alpine
        ports:
        - containerPort: 80
          name: http
        env:
        - name: MINIO_ENDPOINT
          value: "http://localhost:9000"
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-tenant-secret
              key: accesskey
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: minio-tenant-secret
              key: secretkey
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        volumeMounts:
        - name: app-data
          mountPath: /app/data
        - name: minio-config
          mountPath: /app/minio-config
      # MinIO sidecar container
      - name: minio-sidecar
        image: minio/minio:RELEASE.2024-01-16T16-07-38Z
        command:
        - /bin/bash
        - -c
        - |
          minio server --console-address ":9001" /data &
          # Wait for MinIO to be ready
          until mc alias set myminio http://localhost:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD; do
            echo "Waiting for MinIO to be ready..."
            sleep 2
          done
          # Create default bucket
          mc mb myminio/app-data --ignore-existing
          # Keep the container running
          wait
        ports:
        - containerPort: 9000
          name: api
        - containerPort: 9001
          name: console
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: minio-tenant-secret
              key: accesskey
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: minio-tenant-secret
              key: secretkey
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
        - name: minio-data
          mountPath: /data
        - name: minio-config
          mountPath: /app/minio-config
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
      volumes:
      - name: app-data
        emptyDir: {}
      - name: minio-data
        persistentVolumeClaim:
          claimName: minio-sidecar-pvc
      - name: minio-config
        configMap:
          name: minio-sidecar-config
      restartPolicy: Always
